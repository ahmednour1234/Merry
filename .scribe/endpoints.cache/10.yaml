## Autogenerated by Scribe. DO NOT MODIFY.

name: 'System / Plans'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/admin/system/plans
    metadata:
      groupName: 'System / Plans'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: 'Search by code or name (LIKE).'
        required: false
        example: pro
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      active:
        name: active
        description: 'Filter by active status.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      billing:
        name: billing
        description: 'Filter by billing cycle (monthly|annual).'
        required: false
        example: monthly
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Results per page (default 15).'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      q: pro
      active: true
      billing: monthly
      per_page: 20
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"Plans","data":{"items":[{"code":"pro","name":"Pro", "base_currency":"USD","base_price":49.0,"billing_cycle":"monthly","active":true}],"pagination":{"current_page":1,"per_page":15,"total":1}}}'
        headers: []
        description: OK
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/system/plans
    metadata:
      groupName: 'System / Plans'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Unique plan code (primary key).'
        required: true
        example: pro
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'Default (base) name (usually en).'
        required: true
        example: Pro
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'A short description.'
        required: false
        example: 'For growing offices'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      base_currency:
        name: base_currency
        description: 'Base currency code (ISO).'
        required: true
        example: USD
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      base_price:
        name: base_price
        description: 'Base price in base currency.'
        required: true
        example: 49.99
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      billing_cycle:
        name: billing_cycle
        description: monthly|annual.
        required: true
        example: monthly
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      active:
        name: active
        description: 'Whether the plan is active.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      meta:
        name: meta
        description: 'Arbitrary JSON metadata (send as JSON string in form-data).'
        required: false
        example:
          color: '#1e88e5'
        type: object
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      code: pro
      name: Pro
      description: 'For growing offices'
      base_currency: USD
      base_price: 49.99
      billing_cycle: monthly
      active: true
      meta:
        color: '#1e88e5'
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"status":"success","message":"Plan created","data":{"code":"pro","name":"Pro"}}'
        headers: []
        description: Created
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/system/plans/{code}'
    metadata:
      groupName: 'System / Plans'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: 'Plan code (primary key).'
        required: true
        example: pro
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      code: pro
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Default name.'
        required: false
        example: 'Pro Plus'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: Description.
        required: false
        example: 'For advanced usage'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      base_currency:
        name: base_currency
        description: 'Base currency code.'
        required: false
        example: USD
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      base_price:
        name: base_price
        description: 'Base price.'
        required: false
        example: 59.99
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      billing_cycle:
        name: billing_cycle
        description: monthly|annual.
        required: false
        example: annual
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      active:
        name: active
        description: 'Active flag.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      meta:
        name: meta
        description: 'JSON metadata (send as JSON string).'
        required: false
        example:
          badge: popular
        type: object
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Pro Plus'
      description: 'For advanced usage'
      base_currency: USD
      base_price: 59.99
      billing_cycle: annual
      active: false
      meta:
        badge: popular
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"Plan updated"}'
        headers: []
        description: Updated
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"Plan not found"}'
        headers: []
        description: 'Not found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/system/plans/{code}'
    metadata:
      groupName: 'System / Plans'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: 'Plan code.'
        required: true
        example: pro
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      code: pro
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"Plan deleted"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"Plan not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/admin/system/plans/{code}/toggle'
    metadata:
      groupName: 'System / Plans'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: 'Plan code.'
        required: true
        example: pro
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      code: pro
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      active:
        name: active
        description: '1 to enable, 0 to disable.'
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      active: true
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"Plan status updated"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"Plan not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/admin/system/plans/{code}/translations'
    metadata:
      groupName: 'System / Plans'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: 'Plan code.'
        required: true
        example: pro
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      code: pro
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      lang_code:
        name: lang_code
        description: 'Language code.'
        required: true
        example: ar
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'Translated name.'
        required: true
        example: 'الخطة الاحترافية'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Translated description.'
        required: false
        example: 'مناسبة للمكاتب النامية'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      lang_code: ar
      name: 'الخطة الاحترافية'
      description: 'مناسبة للمكاتب النامية'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"Translation saved"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"status":"error","message":"Plan not found or error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/admin/system/plans/{code}/features'
    metadata:
      groupName: 'System / Plans'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: 'Plan code.'
        required: true
        example: pro
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      code: pro
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      features:
        name: features
        description: 'Features array.'
        required: true
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'features[].feature_key':
        name: 'features[].feature_key'
        description: 'Feature key.'
        required: true
        example: cv.limit
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'features[].limit':
        name: 'features[].limit'
        description: 'Limit (if applicable).'
        required: false
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'features[].value':
        name: 'features[].value'
        description: 'Arbitrary value (JSON-serializable).'
        required: false
        example: '{"upload":true}'
        type: mixed
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'features[].active':
        name: 'features[].active'
        description: 'Whether the feature is active.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      features:
        - consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"Features synced"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
