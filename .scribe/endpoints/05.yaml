name: 'System / Users'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/admin/system/users
    metadata:
      groupName: 'System / Users'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List users with filters.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      name:
        name: name
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: ''
        required: false
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      active:
        name: active
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      guard:
        name: guard
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'Role slug/name/id'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      from:
        name: from
        description: date
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      to:
        name: to
        description: date
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: ''
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      name: consequatur
      email: qkunze@example.com
      active: false
      guard: consequatur
      role: consequatur
      from: consequatur
      to: consequatur
      per_page: 17
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"status":"error","message":"Server Error","errors":{},"meta":{}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/system/users
    metadata:
      groupName: 'System / Users'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create user (and attach roles).'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Full name. Must not be greater than 191 characters.'
        required: true
        example: 'Ahmed Ali'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Unique email. Must be a valid email address. Must not be greater than 191 characters.'
        required: true
        example: admin@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'Optional phone. Must not be greater than 30 characters.'
        required: false
        example: '+201001234567'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'Password (min 6). Must be at least 6 characters. Must not be greater than 191 characters.'
        required: true
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      guard:
        name: guard
        description: 'Auth guard. Must not be greater than 32 characters.'
        required: false
        example: api
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      active:
        name: active
        description: 'Active flag.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      roles:
        name: roles
        description: 'The <code>id</code> of an existing record in the system.roles table.'
        required: false
        example:
          - 17
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Ahmed Ali'
      email: admin@example.com
      phone: '+201001234567'
      password: secret123
      guard: api
      active: false
      roles:
        - 17
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/system/users/{id}'
    metadata:
      groupName: 'System / Users'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user (and sync roles if provided).'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Full name. Must not be greater than 191 characters.'
        required: false
        example: 'Ahmed Updated'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Unique email. Must be a valid email address. Must not be greater than 191 characters.'
        required: false
        example: admin2@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'Phone. Must not be greater than 30 characters.'
        required: false
        example: '+201111111111'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'New password (optional). Must be at least 6 characters. Must not be greater than 191 characters.'
        required: false
        example: newpass123
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      guard:
        name: guard
        description: 'Auth guard. Must not be greater than 32 characters.'
        required: false
        example: api
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      active:
        name: active
        description: 'Active flag.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      roles:
        name: roles
        description: 'The <code>id</code> of an existing record in the system.roles table.'
        required: false
        example:
          - 17
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Ahmed Updated'
      email: admin2@example.com
      phone: '+201111111111'
      password: newpass123
      guard: api
      active: false
      roles:
        - 17
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/system/users/{id}'
    metadata:
      groupName: 'System / Users'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Soft delete user.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/admin/system/users/{id}/toggle'
    metadata:
      groupName: 'System / Users'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Toggle active.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      active:
        name: active
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      active: false
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/admin/system/users/{id}/sync-roles'
    metadata:
      groupName: 'System / Users'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Sync roles.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      roles:
        name: roles
        description: 'List of role IDs.'
        required: true
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      roles:
        - consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
